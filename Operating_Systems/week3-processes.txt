1. Намерете командите на 10-те най-стари процеси в системата.

ps -ef | tail -n +2 | sort -n -k 2 | head -n 10 | awk '{print $NF}'

2.Намерете PID и командата на процеса, който заема най-много виртуална памет в системата.

ps -e -o pid -o sz -o cmd | tail -n +2 | sort -nr -k 2 | head -n 1 | awk '{print $1, " - ", $3}'

3. Изведете командата на най-стария процес

 ps -e -o comm --sort=start_time | tail -n 1

4. Намерете колко физическа памет заемат всички процеси на потребителската група root.

ps -e -g root -o rss | awk -v "SUM=0" '{SUM+=$1} END {print SUM}'

5. Изведете имената на потребителите, които имат поне 2 процеса, чиято команда е vim (независимо какви са аргументите й)

ps -e -o uname -o comm | grep "vim" | sort | uniq -c | awk '$1 >= 2 {print $2}'

6. Изведете имената на потребителите, които не са логнати в момента, но имат живи процеси

ps -e -o uname | grep -v "$(who | awk '{print $1}')" | sort | uniq

7. Намерете колко физическа памет заемат осреднено всички процеси на потребителската група root. Внимавайте, когато групата няма нито един процес.

ps -e -g root -o rss | awk -v "SUM=0" '{ SUM+=$1} END {if (NR >0){print SUM/NR;} else {print 0}}'

8. Намерете всички PID и техните команди (без аргументите), които нямат tty, което ги управлява. Изведете списък само с командите без повторения.

ps -e -o tty -o pid -o comm | tail -n +2 | awk '$1=="?" {print $3}' | sort | uniq

9. Да се отпечатат PID на всички процеси, които имат повече деца от родителския си процес.